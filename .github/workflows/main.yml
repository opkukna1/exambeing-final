# This GitHub Actions workflow builds a signed release AAB (Android App Bundle).
# It uses the secrets you have configured in your repository settings.

name: Build Signed Android App

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-release-aab:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out your repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up JDK (Java Development Kit) for the build
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Decode and place the Keystore file
      # This step takes your Base64 secret and converts it back into the keystore file.
      - name: Decode Keystore
        run: |
          echo "Decoding and placing keystore..."
          echo ${{ secrets.KEYSTORE_BASE64 }} | base64 --decode > android/app/release.keystore
          echo "Keystore placed successfully."

      # Step 4: Make the Gradle wrapper executable
      - name: Make gradlew executable
        run: chmod +x android/gradlew

      # Step 5: Build the signed App Bundle (AAB)
      # This step runs the build command. The build.gradle file will now directly
      # read the secrets you have set in your repository.
      - name: Build Release AAB
        # Secrets are passed to the build process
        env:
            KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
            KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
            KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./android/gradlew -p android bundleRelease

      # Step 6: Upload the generated AAB as an artifact
      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/bundle/release/app-release.aab


