name: 'Automate: Fix Gradle Files'

on:
  # Yeh workflow ko manually chalane ki anumati deta hai
  workflow_dispatch:

jobs:
  fix-gradle-files:
    runs-on: ubuntu-latest
    # Yeh code ko waapas save karne ki permission dega
    permissions:
      contents: write

    steps:
      # Step 1: Aapka code download karega
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: settings.gradle file ko theek karega
      - name: Create correct settings.gradle
        run: |
          cat <<'EOF' > android/settings.gradle
          pluginManagement {
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
              }
          }

          dependencyResolutionManagement {
              repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
              repositories {
                  google()
                  mavenCentral()
              }
          }

          rootProject.name = 'android'
          include ':app'

          def localProperties = new Properties()
          def localPropertiesFile = new File(rootProject.projectDir, 'local.properties')
          if (localPropertiesFile.exists()) {
              localPropertiesFile.withReader('UTF-8') { reader ->
                  localProperties.load(reader)
              }
          }

          def flutterSdkPath = localProperties.getProperty('flutter.sdk')
          if (flutterSdkPath == null) {
              throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
          }

          apply from: "$flutterSdkPath/packages/flutter_tools/gradle/app_plugin_loader.gradle"
          EOF

      # Step 3: android/build.gradle file ko theek karega
      - name: Create correct android/build.gradle
        run: |
          cat <<'EOF' > android/build.gradle
          buildscript {
              ext.kotlin_version = '1.8.22'
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:7.4.2'
                  classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
              }
          }

          allprojects {}

          rootProject.buildDir = '../build'
          subprojects {
              project.buildDir = "${rootProject.buildDir}/${project.name}"
          }

          tasks.register("clean", Delete) {
              delete rootProject.buildDir
          }
          EOF

      # Step 4: android/app/build.gradle file ko theek karega
      - name: Create correct android/app/build.gradle
        run: |
          cat <<'EOF' > android/app/build.gradle
          plugins {
              id "com.android.application"
              id "kotlin-android"
              id "dev.flutter.flutter-gradle-plugin"
          }

          def localProperties = new Properties()
          def localPropertiesFile = rootProject.file('local.properties')
          if (localPropertiesFile.exists()) {
              localPropertiesFile.withReader('UTF-8') { reader ->
                  localProperties.load(reader)
              }
          }

          def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
          if (flutterVersionCode == null) {
              flutterVersionCode = '1'
          }

          def flutterVersionName = localProperties.getProperty('flutter.versionName')
          if (flutterVersionName == null) {
              flutterVersionName = '1.0'
          }

          def keystoreProperties = new Properties()
          def keystorePropertiesFile = rootProject.file('key.properties')
          if (keystorePropertiesFile.exists()) {
              keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
          }

          android {
              namespace "com.opkukna.exambeing"
              compileSdk 35
              ndkVersion flutter.ndkVersion

              compileOptions {
                  sourceCompatibility JavaVersion.VERSION_1_8
                  targetCompatibility JavaVersion.VERSION_1_8
              }

              kotlinOptions {
                  jvmTarget = '1.8'
              }

              sourceSets {
                  main.java.srcDirs += 'src/main/kotlin'
              }

              defaultConfig {
                  applicationId "com.opkukna.exambeing"
                  minSdk 23
                  targetSdk 35
                  versionCode flutterVersionCode.toInteger()
                  versionName flutterVersionName
              }

              signingConfigs {
                  release {
                      keyAlias keystoreProperties['keyAlias']
                      keyPassword keystoreProperties['keyPassword']
                      storeFile file(keystoreProperties['storeFile'])
                      storePassword keystoreProperties['storePassword']
                  }
              }

              buildTypes {
                  release {
                      signingConfig signingConfigs.release
                  }
              }
          }

          flutter {
              source '../..'
          }

          dependencies {}
          EOF

      # Step 5: Badle hue code ko repository mein save (commit & push) karega
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@github.com"
          git add android/settings.gradle android/build.gradle android/app/build.gradle
          git commit -m "Automated: Reset Gradle files to a working configuration" || echo "No changes to commit"
          git push
